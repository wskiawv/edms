<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szlhsoft.dao.StorageMapper" >
  <resultMap id="BaseResultMap" type="com.szlhsoft.model.Storage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="storage_name" property="storageName" jdbcType="VARCHAR" />
    <result column="config_file" property="configFile" jdbcType="VARCHAR" />
    <result column="storage_type" property="storageType" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, storage_name, config_file, storage_type, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_storage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_storage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.szlhsoft.model.Storage" >
    insert into t_storage (id, storage_name, config_file, 
      storage_type, description)
    values (#{id,jdbcType=INTEGER}, #{storageName,jdbcType=VARCHAR}, #{configFile,jdbcType=VARCHAR}, 
      #{storageType,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szlhsoft.model.Storage" >
    insert into t_storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="storageName != null" >
        storage_name,
      </if>
      <if test="configFile != null" >
        config_file,
      </if>
      <if test="storageType != null" >
        storage_type,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="storageName != null" >
        #{storageName,jdbcType=VARCHAR},
      </if>
      <if test="configFile != null" >
        #{configFile,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        #{storageType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szlhsoft.model.Storage" >
    update t_storage
    <set >
      <if test="storageName != null" >
        storage_name = #{storageName,jdbcType=VARCHAR},
      </if>
      <if test="configFile != null" >
        config_file = #{configFile,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        storage_type = #{storageType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szlhsoft.model.Storage" >
    update t_storage
    set storage_name = #{storageName,jdbcType=VARCHAR},
      config_file = #{configFile,jdbcType=VARCHAR},
      storage_type = #{storageType,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="delete" parameterType="java.lang.Integer">
    delete t_storage where id=#{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteAll">
    truncate t_storage
  </delete>
  <select id="count" resultType="java.lang.Long" parameterType="java.util.HashMap">
    select count(*) as num from t_storage
  </select>
  <select id="find" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select * from t_storage
  </select>
  <select id="select" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_storage
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageSize != null">
      <if test="currentPage != null">
        limit ${currentPage}, ${pageSize}
      </if>
      <if test="currentPage == null">
        limit ${pageSize}
      </if>
    </if>
  </select>
</mapper>